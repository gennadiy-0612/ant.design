[{"E:\\wamp64\\www\\ant.design\\src\\MainPage.js":"1","E:\\wamp64\\www\\ant.design\\src\\AboutPage.js":"2","E:\\wamp64\\www\\ant.design\\src\\Toggle.js":"3","E:\\wamp64\\www\\ant.design\\src\\MainFooter.js":"4","E:\\wamp64\\www\\ant.design\\src\\AdvisorPage.js":"5","E:\\wamp64\\www\\ant.design\\src\\InvestorsPage.js":"6"},{"size":8098,"mtime":1612958107846,"results":"7","hashOfConfig":"8"},{"size":5430,"mtime":1612516402236,"results":"9","hashOfConfig":"8"},{"size":1082,"mtime":1612366501895,"results":"10","hashOfConfig":"8"},{"size":1686,"mtime":1612955938771,"results":"11","hashOfConfig":"8"},{"size":13779,"mtime":1612955982547,"results":"12","hashOfConfig":"8"},{"size":12585,"mtime":1612957642458,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fjnyg3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\wamp64\\www\\ant.design\\src\\MainPage.js",["27","28","29"],"E:\\wamp64\\www\\ant.design\\src\\AboutPage.js",["30","31","32","33","34","35","36"],"E:\\wamp64\\www\\ant.design\\src\\Toggle.js",["37"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport AdvisorPage from \"./AdvisorPage\";\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isToggleOn: true,\r\n            check: \"checked\"\r\n        };\r\n\r\n        // This binding is necessary to make `this` work in the callback\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(prevState => ({\r\n            isToggleOn: !prevState.isToggleOn\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"checkbox\" className=\"burger-shower\" onClick={this.handleClick}>\r\n                {this.state.isToggleOn ?\r\n                    document.querySelector('body').setAttribute('class', 'hide') :\r\n                    document.querySelector('body').setAttribute('class', 'vis')}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Toggle/>,\r\n    document.getElementById('root')\r\n);\r\nexport default Toggle;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\wamp64\\www\\ant.design\\src\\MainFooter.js",["38"],"E:\\wamp64\\www\\ant.design\\src\\AdvisorPage.js",["39","40","41","42"],"E:\\wamp64\\www\\ant.design\\src\\InvestorsPage.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":22,"column":9,"nodeType":"46","endLine":22,"endColumn":67},{"ruleId":"44","severity":1,"message":"45","line":95,"column":9,"nodeType":"46","endLine":95,"endColumn":65},{"ruleId":"44","severity":1,"message":"45","line":156,"column":7,"nodeType":"46","endLine":156,"endColumn":74},{"ruleId":"47","severity":1,"message":"48","line":4,"column":26,"nodeType":"49","messageId":"50","endLine":4,"endColumn":32},{"ruleId":"51","severity":1,"message":"52","line":60,"column":25,"nodeType":"46","endLine":60,"endColumn":141},{"ruleId":"53","severity":1,"message":"54","line":60,"column":125,"nodeType":"55","endLine":60,"endColumn":140},{"ruleId":"51","severity":1,"message":"52","line":66,"column":25,"nodeType":"46","endLine":66,"endColumn":132},{"ruleId":"53","severity":1,"message":"54","line":66,"column":116,"nodeType":"55","endLine":66,"endColumn":131},{"ruleId":"51","severity":1,"message":"52","line":72,"column":25,"nodeType":"46","endLine":72,"endColumn":132},{"ruleId":"53","severity":1,"message":"54","line":72,"column":116,"nodeType":"55","endLine":72,"endColumn":131},{"ruleId":"47","severity":1,"message":"56","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":19},{"ruleId":"47","severity":1,"message":"57","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":4,"column":26,"nodeType":"49","messageId":"50","endLine":4,"endColumn":32},{"ruleId":"47","severity":1,"message":"58","line":6,"column":9,"nodeType":"49","messageId":"50","endLine":6,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":23,"column":67,"nodeType":"46","endLine":23,"endColumn":125},{"ruleId":"44","severity":1,"message":"45","line":208,"column":37,"nodeType":"46","endLine":208,"endColumn":104},{"ruleId":"47","severity":1,"message":"48","line":4,"column":26,"nodeType":"49","messageId":"50","endLine":4,"endColumn":32},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'AdvisorPage' is defined but never used.","'vhSHCH' is defined but never used.","'Link' is defined but never used."]